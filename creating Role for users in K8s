kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: adminrole
rules:
- apiGroups: ["*"]    # "*" means all api
  resources: ["*"]     # all the resources
  verbs: ["*"]           # all the commmands
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: amin-access_binding
subjects:
- kind: User
  name: samuel                         # Map with username 
  apiGroup: rbac.authorization.k8s.io
roleRef:
  kind: ClusterRole
  name: adminrole
  apiGroup: rbac.authorization.k8s.io
  
# ABOVE IS FUll access to the users Samuel


---                             # JUST the list,REad access to the User "dominion"
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: default            # we can crete it in dev or defaul or any otherv namespace
  name: readonly                # The role is say readonly 
rules:
- apiGroups: [""]               # Use thisb for all the api which have v1
  resources: ["pods"]  
  verbs: ["get","list","create","delete","update"]             # Meaning when it comes to "pods" we can do the foloowing ie get,list etc
- apiGroups: ["apps"]
  resources: ["deployments","replicasets","daemonsets"]            # When it c ome the applications this user can do the following ie deployment,replicaset etc
  verbs: ["get","list"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: full_access_role_binding
  namespace: default
subjects:
- kind: User
  name: dominion                                         # Map with username
  apiGroup: rbac.authorization.k8s.io
roleRef:
  kind: Role
  name: readonly
  apiGroup: rbac.authorization.k8s.io
